@{
    Layout = "_LayoutDashboard";
    ViewBag.Title = "Dashboard";
}

@model Cards.Client.Models.CardsViewModel

  @*   @Html.Page *@

<form id="pageSizeForm" method="get" action="@Url.Action("GetCardsForUser", "Card")">
    <select id="perPageSelect" name="pageSize" onchange="submitPageSizeForm()">
        @if (Model != null && Model.MetaData != null)
        {
            int pageCount = (int)Math.Ceiling((double)Model.MetaData.TotalCount / Model.MetaData.PageSize);
            for (int i = 1; i <= pageCount; i++)
            {
                <option value="@Model.MetaData.PageSize * i">@($"Show {Model.MetaData.PageSize * i}")</option>
            }
        }
    </select>
    @* <input type="hidden" name="pageNumber" value="1" /> *@
    <input type="hidden" id="pageSize" name="pageSize"  />

</form>

<script>
    function submitPageSizeForm() {
        var perPageSelect = document.getElementById('perPageSelect').value;
        document.getElementById('pageSizeForm').pageSize.value = perPageSelect;
        document.getElementById('pageSizeForm').submit();
    }
</script>

        
            <!-- Calculate pagination info -->
            @{
                int from = (Model.MetaData.CurrentPage - 1) * Model.MetaData.PageSize + 1;
                int to = Math.Min(Model.MetaData.CurrentPage * Model.MetaData.PageSize, Model.MetaData.TotalCount);
                string paginationInfo = $"Showing {from}-{to} of {Model.MetaData.TotalCount} cards";
            }

<div>
    @paginationInfo
</div>
<!-- Cards Section -->
@foreach (var card in Model.Cards)
{
    <div class="card mb-3 card-container">
        <div class="card mb-3" style="background-color:@card.Color">
            <div class="card-body">
                <h5 class="card-title">@card.Name</h5>
                <p class="card-text">Status: @card.Status</p>
                <p class="card-text">Date of Creation: @card.DateOfCreation</p>

                <a asp-controller="Card" asp-action="CardEdit" asp-route-cardId="@card.CardId" class="btn btn-warning fas fa-pencil-alt" data-id="@card.CardId"></a>
                <a asp-controller="Card" asp-action="GetCardById" asp-route-cardId="@card.CardId" class="btn btn-info fas fa-info-circle" data-id="@card.CardId"></a>
                <button data-id="@card.CardId" data-name="@card.Name" class="btn btn-danger deleteBtn fas fa-trash" type="button"></button>
            </div>
        </div>
    </div>
}
<!-- Display pagination -->
<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model != null)
        {
            <!-- Previous page link -->
            <li class="page-item @(Model.MetaData.HasPrevious ? "" : "disabled")">
                <a class="page-link" href="@Url.Action("GetCardsForUser", new { pageNumber = Model.MetaData.CurrentPage - 1 })">Previous</a>
            </li>

            <!-- First page link -->
            <li class="page-item @(1 == Model.MetaData.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("GetCardsForUser", new { pageNumber = 1 })">1</a>
            </li>

            <!-- Left ellipsis if needed -->
            @if (Model.MetaData.CurrentPage > 4)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">...</a>
                </li>
            }

            <!-- Intermediate page links -->
            @for (int i = Math.Max(2, Model.MetaData.CurrentPage - 2); i <= Math.Min(Model.MetaData.TotalPages - 1, Model.MetaData.CurrentPage + 2); i++)
            {
                <li class="page-item @(i == Model.MetaData.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("GetCardsForUser", new { pageNumber = i })">@i</a>
                </li>
            }

            <!-- Right ellipsis if needed -->
            @if (Model.MetaData.TotalPages - Model.MetaData.CurrentPage > 3)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">...</a>
                </li>
            }

            <!-- Last page link -->
            <li class="page-item @(Model.MetaData.TotalPages == Model.MetaData.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("GetCardsForUser", new { pageNumber = Model.MetaData.TotalPages })">@Model.MetaData.TotalPages</a>
            </li>

            <!-- Next page link -->
            <li class="page-item @(Model.MetaData.HasNext ? "" : "disabled")">
                <a class="page-link" href="@Url.Action("GetCardsForUser", new { pageNumber = Model.MetaData.CurrentPage + 1 })">Next</a>
            </li>
        }
    </ul>
</nav>




<form id="deleteFrom" asp-controller="Card" asp-action="DeleteCard">
    <input type="hidden" id="cardId" name="cardId" value="">
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.deleteBtn').forEach(function (button) {
            button.addEventListener('click', function (e) {
                var cardId = button.getAttribute("data-id");
                swal({
                    title: "Are you sure?",
                    text: "Are you sure you want to delete this record?",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true
                }).then(function (confirm) {
                    if (confirm) {
                        var id = button.getAttribute("data-id");
                        document.getElementById('cardId').value = cardId;
                        document.getElementById('deleteFrom').submit();
                    }
                });
            });
        });
    });

</script>

<script>
    function handleSortOptionChange() {
        const sortString = updateSortString();
        const form = document.getElementById('sortForm');
        form.action = '@Url.Action("GetCardsForUser", "Card")' + '?sortByString=' + sortString;
        form.submit();
    }

    function updateSortString() {
        const options = {
            sort: {
                orderByString: []
            }
        };

        document.querySelectorAll('input[name="sortOption"]:checked').forEach(checkedCheckbox => {
            const value = checkedCheckbox.value;
            const oppositeSortOption = value.endsWith(' desc') ? value.slice(0, -5) : value + ' desc';
            const oppositeIndex = options.sort.orderByString.indexOf(oppositeSortOption);
            if (oppositeIndex !== -1) {
                options.sort.orderByString.splice(oppositeIndex, 1);
            }
            options.sort.orderByString.push(value);
        });

        return options.sort.orderByString.join(',');
    }
</script>





@*   <div class="card mb-3" id="card" style="background-color: ${card.color}">
        <div class="card-body">
            <h5 class="card-title">${card.name}</h5>
            <p class="card-text">Status: ${card.status}</p>
            <p class="card-text">Date of Creation: ${new Date(card.dateOfCreation).toLocaleString()}</p>

            <a class="btn btn-warning fas fa-pencil-alt" data-id="${card.cardId}"></a>
            <a class="btn btn-info fa-solid fa-circle-info" data-id="${card.cardId}"></a>
            <button data-id="${card.cardId}" data-name="${card.name}" class="btn btn-danger deleteBtn fa-solid fa-trash" type="button"></button>
        </div>
    </div> *@